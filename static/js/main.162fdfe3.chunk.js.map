{"version":3,"sources":["Timer/Timer.js","Home/Home.js","Content/EngagementStrip.js","App.js","serviceWorker.js","index.js"],"names":["Timer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","updateTimer","now","moment","later","target","seconds","Math","floor","diff","minutes","hours","days","setState","state","months","setInterval","react_default","a","createElement","className","Component","Home","src_Timer_Timer","bride","groom","EngagementStrip","title","content","App","src_Home_Home","Content_EngagementStrip","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.162fdfe3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Timer.css';\r\nimport * as moment from 'moment';\r\n\r\nclass Timer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            months: 0,\r\n            days: 0,\r\n            hours: 0,\r\n            minutes: 0,\r\n            seconds: 0\r\n        };\r\n\r\n        setInterval(this.updateTimer, 1000);\r\n    }\r\n\r\n    updateTimer = () => {\r\n        let now = moment();\r\n        let later = moment(this.props.target, \"YYYY-MM-DD HH:mm\");\r\n        let seconds = Math.floor(later.diff(now, \"seconds\", true));\r\n        let minutes = Math.floor(seconds / 60);\r\n        let hours = Math.floor(minutes / 60);\r\n        let days = Math.floor(hours / 24);\r\n    \r\n        hours %= 24;\r\n        minutes %= 60;\r\n        seconds %= 60;\r\n\r\n        this.setState({\r\n            days: days,\r\n            hours: hours,\r\n            minutes: minutes,\r\n            seconds: seconds\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"timer\">\r\n                <div className=\"timer-element-wrapper days\">\r\n                    <span className=\"timer-element-amount days-left\">{this.state.days}</span>\r\n                    <span className=\"timer-element-text days-text\">days</span>\r\n                </div>\r\n                <div className=\"timer-element-wrapper hours\">\r\n                    <span className=\"timer-element-amount hours-left\">{this.state.hours}</span>\r\n                    <span className=\"timer-element-text hours-text\">hours</span>\r\n                </div>\r\n                <div className=\"timer-element-wrapper minutes\">\r\n                    <span className=\"timer-element-amount minutes-left\">{this.state.minutes}</span>\r\n                    <span className=\"timer-element-text minutes-text\">minutes</span>\r\n                </div>\r\n                <div className=\"timer-element-wrapper seconds\">\r\n                    <span className=\"timer-element-amount seconds-left\">{this.state.seconds}</span>\r\n                    <span className=\"timer-element-text seconds-text\">seconds</span>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Timer;","import React, { Component } from 'react';\r\nimport Timer from '../Timer/Timer';\r\nimport \"../Home/Home.css\";\r\n\r\nclass Home extends Component {\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //     this.state = {\r\n    //         background: \"\"\r\n    //     }\r\n    // }\r\n\r\n    // sup = () => {\r\n    //     const http = new XMLHttpRequest();\r\n    //     const url = \"http://fragaming.com/php-images.php?\";\r\n    //     http.open(\"GET\", url);\r\n    //     http.send();\r\n    //     http.onreadystatechange = (e) => {\r\n    //         if (http.responseText) {\r\n    //             console.log(http.responseText);\r\n    //             this.setState({\r\n    //                 background: http.responseText\r\n    //             });\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"home-wrapper\">\r\n                {/* <button onClick={this.sup}>sup</button>\r\n                <img src={this.state.background} /> */}\r\n                <div className=\"center-wrapper fade-in\">\r\n                    <div className=\"countdown-wrapper\">\r\n                        <div className=\"wedding\">ENGAGEMENT</div>\r\n                        <Timer target=\"2019-01-26 17:30\" />\r\n                    </div>\r\n                    <div className=\"bride-groom-container \">\r\n                        <div className=\"bride-groom-names-wrapper\">\r\n                            <div className=\"bride\">{this.props.bride}</div>\r\n                            <div className=\"and\">&</div>\r\n                            <div className=\"groom\">{this.props.groom}</div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"countdown-wrapper\">\r\n                        <div className=\"wedding\">WEDDING</div>\r\n                        <Timer target=\"2019-10-12 00:00\" />\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport './Engagement.css';\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\n\r\nclass EngagementStrip extends Component {\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"engagement-strip\">\r\n                <div className=\"strip-title\">{this.props.title}</div>\r\n                <div className=\"strip-content\">{this.props.content}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EngagementStrip;","import React, { Component } from 'react';\n// import hallPic from \"./images/mont-blanc.jpg\";\n// import churchPic from \"./images/church-pic.jpg\";\nimport Home from \"./Home/Home\";\nimport EngagementStrip from \"./Content/EngagementStrip\";\n// import ContentCard from \"./Content/ContentCard\";\n// import WeddingCard from \"./Content/WeddingCard\";\nimport \"./App.css\";\nimport \"./MobileApp.css\";\nimport \"./Content.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Home bride=\"Alicia\" groom=\"Philip\" />\n\n        <div className=\"content engagement-content\">\n          <div className=\"engagement-wrapper\">\n            <div className=\"content-title\">The Engagement</div>\n            <div className=\"content-card-wrapper\">\n              <EngagementStrip title=\"the beginning\" content=\"The party starts at 5:30 PM with a hot and cold buffet.\n                  The cold station will be set up on the dance floor,\n                  and waiters will be distributing the hot hors d'oeuvres\" />\n\n              <EngagementStrip title=\"On the menu\" content=\"\n                Start off with a traditional italian wedding soup,\n                followed by a mixed green salad.\n                The main will be braciola di maiale alla milanese with polenta and vegetables.\n                As a main dish, cutlets and fries will be served to all children aged 12 and under.\n                Finally, the dessert will be a chocolate croissant bread pudding with mascarpone and berries\" />\n\n              <EngagementStrip title=\"Late at night\" content=\"\n                The night table will be available as of 11:30 PM with a mix of sweet desserts, \n                fruits and of course pizza and sandwiches to help absorb the grappa\" />\n\n              <EngagementStrip title=\"The Bar\" content=\"\n                Open bar before and after dinner until 2:00 AM, unlimited wine and beer throughout the evening and dinner\" />\n\n              <EngagementStrip title=\"entertainment\" content=\"\n                Music and entertainment will be provided by Style Entertainment\" />\n\n              <div className=\"engagement-strip\">\n                  <div className=\"strip-title\">The venue</div>\n                  <div className=\"strip-content venue\">January 26th</div>\n                  <div className=\"strip-content venue\">Plaza Antique</div>\n                  <div className=\"strip-content venue\">6086 Sherbrooke St E</div>\n                  <div className=\"strip-content venue\">Montreal, QC</div>\n                  <div className=\"strip-content venue\">H1N 1C1</div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* <div className=\"content wedding-content\">\n          <div className=\"content-title wedding-title\">The Big Day</div>\n          <div className=\"content-card-wrapper wedding-content-wrapper\">\n            <WeddingCard \n              picture=\"wedding-card-pic left\" \n              pictureURL={churchPic} \n              title=\"THE CHURCH\" \n              listOfThings={[\"October 12th, 2019\", \"12:00 PM - 1:00 PM\",\"La Visitation\", \"1847 Boulevard Gouin E\", \"Montreal, QC, H2C 1C8\"]} />\n\n            <WeddingCard \n              picture=\"wedding-card-pic right\" \n              pictureURL={hallPic} \n              title=\"THE HALL\"\n              listOfThings={[\"October 12th, 2019\", \"6:00 PM - 3:00 AM\",\"Le Mont Blanc\", \"1950 Rue Notre-Dame-de-Fatima\", \"Laval, QC, H7G 4X8\"]} />\n          </div>\n        </div> */}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}